I"0<h1 id="templates"><a href="http://tcpschool.com/cpp/cpp_template_function">Templates</a></h1>
<ul>
  <li>템플릿(template)이란 매개변수의 타입에 따라 함수나 클래스를 생성하는 메커니즘을 의미합니다.</li>
  <li>템플릿은 타입이 매개변수에 의해 표현되므로, 매개변수화 타입(parameterized type)이라고도 불립니다</li>
  <li>템플릿을 사용하면 타입마다 별도의 함수나 클래스를 만들지 않고, 여러 타입에서 동작할 수 있는 단 하나의 함수나 클래스를 작성하는 것이 가능합니다.</li>
</ul>

<h2 id="2-function-template함수-템플릿">2. Function Template(함수 템플릿)</h2>
<ul>
  <li>C++에서 함수 템플릿(function template)이란 함수의 일반화된 선언을 의미합니다</li>
  <li>함수 템플릿을 사용하면 같은 알고리즘을 기반으로 하면서, 서로 다른 타입에서 동작하는 함수를 한 번에 정의할 수 있습니다.</li>
  <li>임의의 타입으로 작성된 함수에 특정 타입을 매개변수로 전달하면, C++ 컴파일러는 해당 타입에 맞는 함수를 생성해 줍니다</li>
</ul>

<blockquote>
  <p>문법</p>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div>  </div>
</blockquote>
:ET