I"⁄	<h1 id="static-variables-and-functionshttpsju3ungithubioglobal-static">(Static-Variables-and-Functions)[https://ju3un.github.io/global-static/]</h1>

<h1 id="exercise">Exercise</h1>
<blockquote>
  <p>Main.cpp</p>
</blockquote>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#include &lt;iostream&gt;
#include "farm.h"

using namespace std;
/* polymorphism, virtual functions, abstract class */
void voiceOfAnimal(Animal *);
void voiceOfAnimal(Animal &amp;);
int main()
{

    Dog dog;
    Cat cat;
    Cow cow;
/*
    cout &lt;&lt; animal.getVoice() &lt;&lt; endl;
    cout &lt;&lt; dog.getVoice() &lt;&lt; endl;
    cout &lt;&lt; cat.getVoice() &lt;&lt; endl;
    cout &lt;&lt; cow.getVoice() &lt;&lt; endl;
    */
    voiceOfAnimal(&amp;cow); // why we use &amp; because it is for class usually. so it took as reference



    return 0;
}
void voiceOfAnimal(Animal *p)
{
    cout &lt;&lt; p-&gt;getVoice() &lt;&lt; endl;
}
void voiceOfAnimal(Animal &amp;p)
{
    cout &lt;&lt; p.getVoice() &lt;&lt; endl;
}
</code></pre></div></div>

<blockquote>
  <p>farm.h</p>
</blockquote>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#ifndef FARM_H_INCLUDED
#define FARM_H_INCLUDED
#include &lt;iostream&gt;

using namespace std;

class Animal
{
        protected:
            string voice;
        public:
            Animal();
            ~Animal();
            virtual string getVoice() = 0; // Í∞ÄÏÉÅÌï®ÏàòÎ°ú ÏÑ†Ïñ∏ÌïòÏó¨ Ïú†ÎèÑ ÌÅ¥ÎûòÏä§ GetvoiceÎ•º Ïì∏ Ïàò ÏûàÍ≤å Ìï®
};
class Dog : public Animal
{
            string sign;
        public:
            Dog();
            ~Dog();
            string getVoice() { return voice + " " + sign; }
};
class Cat : public Animal
{
            string sign;
        public:
            Cat();
            ~Cat();
            string getVoice() { return voice  + " " +  sign; }
};
class Cow : public Animal
{
            string sign;
        public:
            Cow();
            ~Cow();
            string getVoice() { return voice  + " " +  sign; }
};

#endif // FARM_H_INCLUDED
</code></pre></div></div>

<blockquote>
  <p>farm.cpp</p>
</blockquote>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#include "farm.h"


Animal::~Animal()
{

}
Dog::Dog()
{
    sign = "D";
    voice = "hau";
}
Dog::~Dog()
{

}
Cat::Cat()
{
    sign = "C";
    voice = "meow";
}
Cat::~Cat()
{

}
Cow::Cow()
{
    sign = "CO";
    voice = "moooo";
}
Cow::~Cow()
{

}

</code></pre></div></div>
:ET