I"<h1 id="the-value-function">The Value function</h1>
<script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>

<div align="center" style="margin: 1em 0;">
<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5150894678574694" data-ad-slot="9221331439" data-ad-format="auto" data-full-width-responsive="true"></ins>
     </div>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

<h2 id="1-assigning-rewards">1. Assigning Rewards</h2>
<ul>
  <li>the programmers are like “coaches(教练)” to the AI</li>
  <li>Pet Owner is a good analogy</li>
  <li>We define how to give rewards to agent (Ex. Give same reward no matter what agent does - agent will always just behave randomly)(Ex2. Give our dog a treat when it behaves badly - encourages bad behavior)</li>
</ul>

<h2 id="2-maze-example">2. Maze Example</h2>
<ul>
  <li>Robot Trying to solve maze</li>
  <li>Reward of 1 for finding the maze exit, else 0</li>
  <li>But robot unlikely to solve the maze with this structure</li>
  <li>if robot only sees reward is the max reward if all we see is 0</li>
  <li>better: Every step yields reward of -1</li>
  <li>Now robot is encouraged so solve maze as quickly as possible</li>
</ul>

<h2 id="3-something-like">3. Something like</h2>
<ul>
  <li>be careful not to build our own prior knowledge into the AI ( Ex. Chess)</li>
  <li>Agent should be rewarded for winning, not taking opponent’s pieces</li>
  <li>No reward for implementing strategy us read about in chess book</li>
  <li>Free the agent to find its own solution</li>
  <li><em>OK</em> to lose all but one piece and then win</li>
  <li>tell the agent <strong>what</strong> we want it to achieve, not <strong>how</strong> we want it to be achieved</li>
</ul>
:ET