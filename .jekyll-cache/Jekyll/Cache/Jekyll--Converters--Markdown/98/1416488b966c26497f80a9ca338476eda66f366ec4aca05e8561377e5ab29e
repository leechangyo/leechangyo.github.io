I"Û<h1 id="exercise">Exercise</h1>

<blockquote>
  <p>Main.cpp</p>
</blockquote>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#include "Rectangle.h"
#include "Circle.h"
#include &lt;iostream&gt;

using namespace std;

void introduceShape(Shape*);
double calculateShapeArea(Shape*);
double calculateShapeCircumferece(Shape*);

int main()
{

    Rectangle rectangle1(5,2);
    Circle circle1(3);

    introduceShape(&amp;rectangle1);
    cout &lt;&lt; "My area is: " &lt;&lt; calculateShapeArea(&amp;rectangle1) &lt;&lt; ", my circumference is: " &lt;&lt; calculateShapeCircumferece(&amp;rectangle1) &lt;&lt; endl &lt;&lt; endl;

    introduceShape(&amp;circle1);
    cout &lt;&lt; "My area is: " &lt;&lt; calculateShapeArea(&amp;circle1) &lt;&lt; ", my circumference is: " &lt;&lt; calculateShapeCircumferece(&amp;circle1) &lt;&lt; endl;

    return 0;
}

void introduceShape(Shape* shapeToIntroduce)
{
    return shapeToIntroduce-&gt;introduce();
}

double calculateShapeArea(Shape* shapeToCalculate)
{
    return shapeToCalculate-&gt;calculateArea();
}

double calculateShapeCircumferece(Shape* shapeToCalculate)
{
    return shapeToCalculate-&gt;calculateCircumference();
}

</code></pre></div></div>

<blockquote>
  <p>Rectangle.h</p>
</blockquote>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#ifndef RECTANGLE_H_INCLUDED
#define RECTANGLE_H_INCLUDED
#include "Shape.h"

class Rectangle: public Shape
{
    double width;
    double height;
public:
    Rectangle(double, double);
    void introduce();
    double calculateArea();
    double calculateCircumference();

};


#endif // RECTANGLE_H_INCLUDED

</code></pre></div></div>

<blockquote>
  <p>circle.h</p>
</blockquote>
:ET