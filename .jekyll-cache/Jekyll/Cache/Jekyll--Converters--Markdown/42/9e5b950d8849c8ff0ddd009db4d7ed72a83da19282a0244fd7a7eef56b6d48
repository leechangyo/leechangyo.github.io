I"ù<h1 id="exercise">Exercise</h1>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#include &lt;iostream&gt;
#include &lt;cstdlib&gt;

using namespace std;

int *createArray(int);

void swapTwoValues(int*, int*);

void printArrayValues(int[], int);

void bubbleSort(int[], int, int = 1);
void selectionSort(int[], int, int = 1);


int main ()
{

    int sizeOfArray;
    cout &lt;&lt; "Input the size of the array to sort: ";
    cin &gt;&gt; sizeOfArray;

    int *a = createArray(sizeOfArray);

    printArrayValues(a, sizeOfArray);

    int orderOfSequence;
    cout &lt;&lt; endl &lt;&lt; "Sort Ascending - 1, Descending - 2: ";
    cin &gt;&gt; orderOfSequence;

    if (orderOfSequence != 2)
        orderOfSequence = 1;

    char sortChoice;
    cout &lt;&lt; "Bubble Sort - B or b, Selection Sort - S or s: ";
    cin &gt;&gt; sortChoice;

    if (sortChoice != 'S' || sortChoice != 's')
        sortChoice = 'B';

    if (sortChoice == 'B' || sortChoice == 'b')
    {
        bubbleSort(a, sizeOfArray, orderOfSequence);
    }
    else if (sortChoice == 'S' || sortChoice == 's')
    {
        selectionSort(a, sizeOfArray, orderOfSequence);
    }

    delete[] a;
    return 0;
}

int *createArray(int sizeOfArray)
{
    int* newArray = new int[sizeOfArray];

    for (int i = 0; i &lt; sizeOfArray; i++)
    {
        newArray[i] = rand()%1500;
    }

    return newArray;
}

void swapTwoValues(int* firstValue, int* secondValue)
{
    int temporaryVariable;

    temporaryVariable = *firstValue;
    *firstValue = *secondValue;
    *secondValue = temporaryVariable;
}

void printArrayValues(int arrayToPrint[], int sizeOfArray)
{
    for (int i = 0; i &lt; sizeOfArray; i++)
    {
        cout &lt;&lt; "Array[" &lt;&lt; i &lt;&lt; "] = " &lt;&lt; arrayToPrint[i] &lt;&lt; endl;
    }
    cout &lt;&lt; endl;
}

void bubbleSort(int arrayToSort[], int sizeOfArray, int orderOfSequence)
{
    for (int i = 0; i &lt; sizeOfArray-1; i++)
    {
        for (int j = 0; j &lt; sizeOfArray-1; j++)
        {
            if (orderOfSequence == 1 &amp;&amp; arrayToSort[j] &gt; arrayToSort[j+1])
            {
                    swapTwoValues(arrayToSort+j, arrayToSort+j+1);
            }
            else if (orderOfSequence == 2 &amp;&amp; arrayToSort[j] &lt; arrayToSort[j+1])
            {
                    swapTwoValues(arrayToSort+j, arrayToSort+j+1);
            }
        }
    }
    printArrayValues(arrayToSort, sizeOfArray);
}

void selectionSort(int arrayToSort[], int sizeOfArray, int orderOfSequence)
{
    int limitIndex;
    for (int i = 0; i &lt; sizeOfArray; i++)
    {
        limitIndex = i;
        for (int j = i; j &lt; sizeOfArray; j++)
        {
            if (orderOfSequence == 1 &amp;&amp; arrayToSort[j] &lt; arrayToSort[limitIndex])
            {
                limitIndex = j;
            }
            else if (orderOfSequence == 2 &amp;&amp; arrayToSort[j] &gt; arrayToSort[limitIndex])
            {
                limitIndex = j;
            }
        }
        swapTwoValues(arrayToSort+i, arrayToSort+limitIndex);
    }
    printArrayValues(arrayToSort, sizeOfArray);
}

</code></pre></div></div>

<h1 id="exercise2">Exercise2</h1>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#include &lt;iostream&gt;
#include &lt;cstdlib&gt;

using namespace std;

int * createArray(int);

void swapTwoValues(int*, int*);

void fillArrayWithValues(int[], int);
void printArrayValues(int[], int);

void bubbleSort(int[], int, int = 1);
void selectionSort(int[], int, int = 1);


int main ()
{

    int sizeOfArray;
    cout &lt;&lt; "Input the size of the array to sort: ";
    cin &gt;&gt; sizeOfArray;

    int* a = createArray(sizeOfArray);

    fillArrayWithValues(a, sizeOfArray);
    printArrayValues(a, sizeOfArray);

    int orderOfSequence;
    cout &lt;&lt; endl &lt;&lt; "Sort Ascending - 1, Descending - 2: ";
    cin &gt;&gt; orderOfSequence;

    if (orderOfSequence != 2)
        orderOfSequence = 1;

    char sortChoice;
    cout &lt;&lt; "Bubble Sort - B or b, Selection Sort - S or s: ";
    cin &gt;&gt; sortChoice;

    if (sortChoice != 'S' || sortChoice != 's')
        sortChoice = 'B';

    if (sortChoice == 'B' || sortChoice == 'b')
    {
        bubbleSort(a, sizeOfArray, orderOfSequence);
    }
    else if (sortChoice == 'S' || sortChoice == 's')
    {
        selectionSort(a, sizeOfArray, orderOfSequence);
    }

    delete[] a;
    return 0;
}

int * createArray(int sizeOfArray)
{
    int* newArray = new int[sizeOfArray];

    return newArray;
}

void swapTwoValues(int* firstValue, int* secondValue)
{
    int temporaryVariable;

    temporaryVariable = *firstValue;
    *firstValue = *secondValue;
    *secondValue = temporaryVariable;
}

void fillArrayWithValues(int arrayToFill[], int sizeOfArray)
{
    for (int i = 0; i &lt; sizeOfArray; i++)
    {
        cout &lt;&lt; "Enter " &lt;&lt; i+1 &lt;&lt; " element: ";
        cin &gt;&gt; arrayToFill[i];
    }
    system("cls");
}

void printArrayValues(int arrayToPrint[], int sizeOfArray)
{
    for (int i = 0; i &lt; sizeOfArray; i++)
    {
        cout &lt;&lt; "Array[" &lt;&lt; i &lt;&lt; "] = " &lt;&lt; arrayToPrint[i] &lt;&lt; endl;
    }
    cout &lt;&lt; endl;
}

void bubbleSort(int arrayToSort[], int sizeOfArray, int orderOfSequence)
{
    for (int i = 0; i &lt; sizeOfArray-1; i++)
    {
        for (int j = 0; j &lt; sizeOfArray-1; j++)
        {
            if (orderOfSequence == 1 &amp;&amp; arrayToSort[j] &gt; arrayToSort[j+1])
            {
                    swapTwoValues(arrayToSort+j, arrayToSort+j+1);
            }
            else if (orderOfSequence == 2 &amp;&amp; arrayToSort[j] &lt; arrayToSort[j+1])
            {
                    swapTwoValues(arrayToSort+j, arrayToSort+j+1);
            }
        }
    }
    printArrayValues(arrayToSort, sizeOfArray);
}

void selectionSort(int arrayToSort[], int sizeOfArray, int orderOfSequence)
{
    int limitIndex;
    for (int i = 0; i &lt; sizeOfArray; i++)
    {
        limitIndex = i;
        for (int j = i; j &lt; sizeOfArray; j++)
        {
            if (orderOfSequence == 1 &amp;&amp; arrayToSort[j] &lt; arrayToSort[limitIndex])
            {
                limitIndex = j;
            }
            else if (orderOfSequence == 2 &amp;&amp; arrayToSort[j] &gt; arrayToSort[limitIndex])
            {
                limitIndex = j;
            }
        }
        swapTwoValues(arrayToSort+i, arrayToSort+limitIndex);
    }
    printArrayValues(arrayToSort, sizeOfArray);
}
</code></pre></div></div>

<h1 id="exercise-3">Exercise 3</h1>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#include &lt;iostream&gt;

using namespace std;

int main ()
{

    int arraySize;

    cout &lt;&lt; "Input the size of the dynamic array you want to create: ";
    cin &gt;&gt; arraySize;

    int *dynamicArray = new int[arraySize];


    for (int i = 0; i &lt; arraySize; i++)
    {
        cout &lt;&lt; "Input " &lt;&lt; i+1 &lt;&lt; " number: ";
        cin &gt;&gt; *(dynamicArray+i);
    }

    for (int i = 0; i &lt; arraySize; i++)
    {
        cout &lt;&lt; "Number " &lt;&lt; i+1 &lt;&lt; ": " &lt;&lt; *(dynamicArray+i) &lt;&lt; endl;
    }

    delete []dynamicArray;


}


</code></pre></div></div>
:ET